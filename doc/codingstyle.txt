
###############################################################################
## СТИЛЬ ОФОРМЛЕНИЯ ИСХОДНЫХ КОДОВ КОМПИЛЯТОРА
###############################################################################

КОДИРОВКА

Для написания исходных кодов компилятора и проектной документации используется кодировка windows-1251.


ОТСТУПЫ

Каждая вложенная конструкция начинается с отступа в один символ табуляции.
Замена табуляций на пробелы недопустима.
Не накладывается требований на настройки редактора по отображению табуляции (отформатированный в соотвествии с данными рекомендациями текст будет корректно отображаться при любых настройках).

В случае, когда требуется выравнить конструкцию, не создающую новый уровень вложености, используется то же число табуляций, что и для прочих операторов данного блока, а необходимое выравнивание выполняется пробелами.
Выравнивание внутри строк также выполняется пробелами.


ОФОРМЛЕНИЕ СОСТАВНЫХ ОПЕРАТОРОВ

Завершающий элемент составного оператора рекомендуется писать полностью (end:if, end:while) и т.п. В случае, если длина составного оператора превышает 4-5 строк или оператор находится на глубоком уровне вложености, писать завершающий элемент полностью настоятельно рекомендуется.

В операторах select и switch условие case не имеет собственного отступа.


ФОРМАТИРОВАНИЕ ВЫРАЖЕНИЙ

Знак бинарной операции отделяется пробелами слева и справа.
Знак унарной операции пишется без пробела со своим операндом.
После запятой ставится пробел, перед запятой, как правило, не ставится.
После имени функции и перед открывающей круглой скобкой пробел не ставится.
Если длинное выражение разбивается на несколько строк, рекомендуется выравнить его по однотипным элементам в каждой строке.


КОММЕНТАРИИ

Рекомендуется использовать комментарии /*  */ для оформления примечаний и пояснений к тексту программы.
В случае, когда необходимо внести значительный блок текста, рекомендуется использовать комментарий $comment DOCUMENTATION.

Используемые в комментариях обозначения:

FIXME      - код некорректный и нуждается в исправлении. На определённых входных данных возможны ошибки (вплоть до фатальных по отношению к пользовательским данным).
TODO       - код корректен, но не обеспечивает полную заявленную функциональность, либо планируется раcширить функциональность.

DOCUMENTME - код нуждается в документировании.

SPEED      - выполнена оптимизация по скорости (при описании нетривиальных оптимизированных алгоритмов).
NEED SPEED - необходимо выполнить оптимизацию по скорости.

BUG        - код работает неверно, но причина не найдена.
BUGFIX     - в коде исправлена ошибка.

HACK       - хак; косвенное решение проблемы, чьё прямое решение неизвестно или невозможно.


Для временного отключения части исходного текста рекомендуется использовать комментарий // либо $comment EXCLUDE или $comment OLDCODE.


ФУНКЦИИ

Функции следует визуально отделять друг от друга строкой
/*****************************************************************************/

Перед каждой функцией следует писать комментарий, описывающий назначение, аргументы и возвращаемое значение функции.

