$comment DOCUMENTATION ********************************************************

word strlen(char @St);
Возвращает количество символов строки, не включая завершающий 0-символ.

word strcmp(char @S1, @S2);
Возвращает 0 если строки равны и не 0 в противном случае.

char @strcpy(char @Dst, @Src);
Копирует строку @Src в @Dst. Возвращает значение @Dst.

char @strcat(char @Dst, @Src);
Производит конкатенацию строк @Dst и @Src и помещает результат в @Dst.

char @strn_cpy(char @Dst, @Src; word DstSize);
Копирует строку @Src в @Dst, при этом размер @Dst составляет DstSize байт.
Если строка @Src не умещается в строке @Dst, вызывает assert exception.
Возвращает значение @Dst.

char @strn_cat(char @Dst, @Src; word DstSize);
Производит конкатенацию строк @Dst и @Src и помещает результат в @Dst,
при этом размер @Dst составляет DstSize байт.
Если результат не умещается в строке @Dst, вызывает assert exception.
Возвращает значение @Dst.

***************************************************************** DOCUMENTATION

word strlen(char @St)
	word i = 0;
	while St[i] != #0 do
		inc i;
	end

	return i;
end

/*****************************************************************************/

word strcmp(char @S1, @S2)

	word i = 0;
	while S1[i] = S2[i] do
		if S1[i] = #0 then
			return 0;
		end

		inc i;
	end

	return 1;
end

/*****************************************************************************/

char @strcpy(char @Dst, @Src)
	word i = 0;
	while Src[i] != #0 do
		Dst[i] = Src[i];
		inc i;
	end
	Dst[i] = #0;

	return @Dst;
end

/*****************************************************************************/

char @strcat(char @Dst, @Src)
	strcpy(@Dst[strlen(@Dst)],@Src);
	return @Dst;
end

/*****************************************************************************/

char @strn_cpy(char @Dst, @Src; word DstSize)
	word i = 0;
	while Src[i] != #0 do
		if i >= DstSize then
			null; /* FIXME: assert */
		end:if
		Dst[i] = Src[i];
		inc i;
	end
	
	if i >= DstSize then
		null; /* FIXME: assert */
	end:if

	Dst[i] = #0;

	return @Dst;
end

/*****************************************************************************/

char @strn_cat(char @Dst, @Src; word DstSize)
	word DstLen = strlen(@Dst);
	if DstLen >= DstSize then
		null; /* FIXME: assert */
	end:if
	strn_cpy(@Dst[strlen(@Dst)], @Src, DstSize - DstLen);
	return @Dst;
end

/*****************************************************************************/
