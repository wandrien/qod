
/*****************************************************************************/

/* Информация о текущем файле. */

SOURCELOCATION CurrentFileInfo;
word pCurrentFileLiteral = nDICT;

/*****************************************************************************/

define  nMSGBUFF 512

word HasErrors = 0;

/*****************************************************************************/

void ComposeMsg(char @Buff; word BuffSize; char @Msg1; char @Msg2)
	strbuf buf;
	strbuf_init(@buf, @Buff, BuffSize);
	strbuf_append_cstr(@buf, @Msg1);
	if @Msg2 != NULL then
		strbuf_append_cstr2(@buf, ": ", @Msg2);
	end
end


/*****************************************************************************/

void PutLocation(SOURCELOCATION @SourceLocation)
	if @SourceLocation != NULL & @SourceLocation.FileName != NULL then
		puts(@SourceLocation.FileName);
		puts(":");
		puts(@str(SourceLocation.Line));
		puts(":");
		puts(@str(SourceLocation.Column));
		puts(": ");
	end:if
end

void PutMessage(SOURCELOCATION @SourceLocation; char @MsgType; char @Msg)
	puts("~r");
	PutLocation(@SourceLocation);
	puts(@MsgType);
	puts(@Msg);
	puts("~r~n");
end

void WarnAt(SOURCELOCATION @SourceLocation; char @Msg)
	when @SourceLocation == NULL:
		@SourceLocation = @CurrentFileInfo;
	PutMessage(@SourceLocation, @msgWARNING, @Msg);
end

void Warn(char @Msg)
	WarnAt(@CurrentFileInfo, @Msg);
end

void ErrorAt(SOURCELOCATION @SourceLocation; char @Msg)
	when @SourceLocation == NULL:
		@SourceLocation = @CurrentFileInfo;
	PutMessage(@SourceLocation, @msgERROR, @Msg);
	HasErrors = 1;
end

void Error(char @Msg)
	ErrorAt(NULL, @Msg);
end

void ErrorWithSubject(char @Msg; char @Subject)
	char Buff[nMSGBUFF];
	ComposeMsg(@Buff, nMSGBUFF, @Msg, @Subject);
	Error(@Buff);
end

void ErrorWithSubjectAt(SOURCELOCATION @SourceLocation; char @Msg; char @Subject)
	char Buff[nMSGBUFF];
	ComposeMsg(@Buff, nMSGBUFF, @Msg, @Subject);
	ErrorAt(@SourceLocation, @Buff);
end

void DeprecatedAt(SOURCELOCATION @SourceLocation; char @Msg)
	char Buff[nMSGBUFF];
	ComposeMsg(@Buff, nMSGBUFF, @wDEPRECATED, @Msg);
	if ErrorDeprecatedFeatures != 0 then
		ErrorAt(@SourceLocation, @Buff);
	else
		WarnAt(@SourceLocation, @Buff);
	end:if
end

void Deprecated(char @Msg)
	DeprecatedAt(NULL, @Msg);
end

void StopAt(SOURCELOCATION @SourceLocation; char @Msg)
	when @SourceLocation == NULL:
		@SourceLocation = @CurrentFileInfo;
	PutMessage(@SourceLocation, @msgERROR, @Msg);
	halt(1);
end

void Stop(char @Msg)
	StopAt(NULL, @Msg);
end

void StopWithSubject(char @Msg; char @Subject)
	char Buff[nMSGBUFF];
	ComposeMsg(@Buff, nMSGBUFF, @Msg, @Subject);
	Stop(@Buff);
end

void StopWithSubjectChar(char @Msg; char Char)
	char Subject[2];
	Subject[0] = Char;
	Subject[1] = #0;
	StopWithSubject(@Msg, @Subject);
end

void StopInternal(char @File; word Line)
	char Buff[nMSGBUFF];
	strbuf buf;
	strbuf_init(@buf, @Buff, nMSGBUFF);
	strbuf_append_cstr4(@buf, @eINTERNAL, @File, ":", @str(Line));
	Stop(@Buff);
end

void StopMemory()
	Stop(@eNOMEMORY);
end

void ShowParseProgress(word nl)
	if show_parse_progress == 0 then
		return;
	end:if

	if @CurrentFileInfo.FileName == NULL then
		return;
	end:if

	char @NL = "";
	if nl != 0 then
		@NL = "~r~n";
	end
	char Buff[nMSGBUFF];
	strbuf buf;
	strbuf_init(@buf, @Buff, nMSGBUFF);
	strbuf_append_cstr6(@buf,
		"~r",
		@CurrentFileInfo.FileName,
		"(",
		@str(CurrentFileInfo.Line),
		")",
		@NL
	);
	puts(@Buff);
end

/*****************************************************************************/
