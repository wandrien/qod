
/*****************************************************************************/

void CloseOutput();
void EmitComment(char @Comment);
void EmitPhoSkip(char @Inst);
char @EncodeLoadConstant(char @Buff; word Reg; word RegMode; word Value);
void NodeMarkUsed(word P);

define Flag_Zero 1
define Flag_Sign 2
word MeaningfulFlags = 0;

word pExitProcess = nDICT;

word EntryLabel = 0;

namespace Mach of
	word AllowedRegSize = 4;
	word NativeRegSize = 4;
	word PointerSize = 4;
	word Mode = 4;
end:namespace

include "backend_msg.qdi";
include "backend_pho.qdi";
include "backend_pho_node_links.qdi";
include "backend_lib.qdi";
include "backend_labels.qdi";
include "backend_emit.qdi";
include "asm_driver.qdi";
include "asm_driver_fasm.qdi";
include "asm_driver_nasm.qdi";
include "backend_asmcode.qdi";
include "backend_asmcode_mul.qdi";
include "backend_data_emitter.qdi";
include "backend_code_emitter.qdi";
include "backend_misc.qdi";

/*****************************************************************************/

void InitAsmDriver()
	switch TargetAssembler of
	case ASM_MODE.aFASM:
		EnableFasmDriver();
	case ASM_MODE.aNASM:
		EnableNasmDriver();
	default:
		StopInternalCodegen(__FILE__, __LINE__);
	end:switch
end

/*****************************************************************************/
