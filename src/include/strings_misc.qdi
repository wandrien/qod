
/*****************************************************************************/

char str2_return_buff[bitsizeof(word) + 2];

char @str2(word Value; word Base; char Sign)
	char @Buff = @str2_return_buff;
	char @Digit="0123456789ABCDEF";

	word I = countof(str2_return_buff) - 1;
	Buff[I] = #0;
	repeat
		dec I;
		Buff[I] = Digit[Value % Base];
		Value = Value / Base;
	until Value == 0;

	if Sign != #0 then
		dec I;
		Buff[I] = Sign;
	end

	return @Buff[I];
end

/*****************************************************************************/

char @str(word Value)
	return @str2(Value, 10, #0);
end

/*****************************************************************************/

char @istr(int Value)
	if Value >= 0 then
		return @str2(as_unsigned(Value), 10, #0);
	else
		return @str2(as_unsigned(-Value), 10, '-');
	end:if
end

/*****************************************************************************/

word str_hash(char @S)
	word hash = 71;
	word i = 0;
	forever do
		word Ch = word(S[i]);
		when Ch == 0:
			exit;
		hash = hash * 5 + Ch;
		inc i;
	end

	return hash;
end

/*****************************************************************************/
