
/*****************************************************************************/

char str2_return_buff[40];

char @str2(word Value; word Base)
	char @Buff = @str2_return_buff;
	char @Digit="0123456789ABCDEF";

	word   I = 0;
	while  Value > 0 | I == 0 do
		Buff[I] = Digit[Value % Base];
		inc  I;
		Value = Value / Base;
	end

	Buff[I] = #0;

	word J = 0;
	word K = I - 1;
	while J < K do
		char C  = Buff[J];
		Buff[J] = Buff[K];
		Buff[K] = C;

		dec  K;
		inc  J;
	end

	return @Buff;
end

/*****************************************************************************/

char @str(word Value)
	return @str2(Value, 10);
end

/*****************************************************************************/

char istr_return_buff[40];

char @istr(int Value)
	if Value == -2147483648 then
		return "-2147483648";
	end:if

	if Value >= 0 then
		return @str2(Value, 10);
	end:if

	istr_return_buff[0] = '-';
	strcpy(@istr_return_buff[1], @str2(-Value, 10));
	return @istr_return_buff;
end

/*****************************************************************************/

word str_hash(char @S)
	word  hash = 71;
	word  i = 0;
	while S[i] != #0 do
		hash = hash * 5 + word(S[i]);
		inc i;
	end

	return hash;
end

/*****************************************************************************/
