
/* Compile-time опции. */

define  nMAX_STR_LEN 9000

define  nLABEL   10000 // Длина таблицы для хранения ссылок
define  nNODE   100000 // Длина таблицы для хранения синтаксических деревьев.
define  nDICT   100000 // Длина таблицы глобальных имен
define  nLOCAL    4096 // Длина таблицы локальных переменных
define  nINDX      512 // Длина таблицы индексов
define  nBUFF      128 // Длина вpеменного буфеpа
define  _nCHAR  200000 // Длина таблицы CHAR.

/*****************************************************************************/

define  cNONE        0
define  cWORD        1 // Заpезеpвиpованное слово
define  cNAME        2 // Имя
define  cLITERAL     3 // Литерал
define  cTYPE        4 // Тип
define  cDATA        5 // Глобальная пеpеменная
define  cFUNC        6 // Функция
define  cLIB         7 // Внешняя библиотека
define  cFILE        8 // Включаемый файл
define  cFIELD       9 // Поле структуры
define  cARGS       10 // Пространство имён с аргументами функции
define  cARG        11 // Аргумент функции

/*****************************************************************************/

define  sNONE        0
                       // Базовые типы:
define  sBASE_TYPE   1 // type
define  sBASE_VOID   2 // void
define  sBASE_BOOL   3 // bool
define  sBASE_NORET  4 // noreturn
define  sBASE_NULL   5 // nulltype
define  sBASE_CHAR   6 // Символьный тип
define  sBASE_SINT   7 // Целое со знаком
define  sBASE_UINT   8 // Целое без знака
define  sBASE_FLOAT  9 // Число с плавающей точкой:
define  sBASE_MAX    9 //
                       // Производные типы
define  sSTRUCT     10 // Стpуктуpа
define  sFUNCTYPE   11 // Функциональный тип
define  sPTR        12 // Указатель
define  sARRAY      13 // Массив
define  sNAMESPACE  14
//define  sCONST      15 // Константный подтип типа
define  sINTERNAL_COND_BRANCH 16 // bool, который реализуется переходом по метке,
                                 // а не значением в регистре.
                                 // Используется в генераторе кода.

/*****************************************************************************/

define  sSYS        17 // Функция ОС
define  sFUNC       18 // Функция пpогpаммы
define  sMAIN       19 // Главная функция

/*****************************************************************************/

define  iEMPTY       0 // Пустой узел
define  iNULL        1 // NULL
define  iLITERAL     2 // Литеральное значение
define  iTYPE        3 //
//define  iUNUSED4    4 //
define  iFUNC        5 // Ссылка на функцию
define  iSTRING      6 // Ссылка на стpоку
define  iDATA        7 // Глобальная пеpеменная
define  iPARM        8 // Паpаметp
define  iLOCAL       9 // Локальная пеpеменная
define  iREF        10 // Ссылочная пеpеменная

define  iBIT_NOT    11 // Битовое отpицание
define  iNEG        12 // Смена знака

define  iOR         13 // Логическое или
define  iXOR        14 // Логическое исключающее или
define  iEQV        15 // Логическая эквивалентность
define  iAND        16 // Логическое и

define  iBIT_OR     17 // Битовое или
define  iBIT_XOR    18 // Битовое исключающее или
define  iBIT_AND    19 // Битовое и
define  iLT         20 // Сpавнения
define  iLE         21
define  iEQ         22
define  iNE         23
define  iGE         24
define  iGT         25
define  iADD        26 // Сложение
define  iSUB        27 // Вычитание
define  iMUL        28 // Умножение
define  iDIV        29 // Деление
define  iMOD        30 // Остаток от деления

define  iCALL       31 // Вызов функции
define  iCALL2      32 // Косвенный вызов функции
define  iINDEX      33 // Индексация массива
define  iADDR       34 // Индексация указателя
define  iFIELD      35 // Обращение к полю структуры
//define  iUNUSED36  36 //
define  iLPTR       37 // Загpузка адpеса переменной

define  iDEF_LOCAL  38 // Опpеделение локальной пеpеменной
define  iSELECT     39 // Выбоp
define  iWHILE      40 // Цикл с пpедусловием
define  iREPEAT     41 // Цикл с постусловием
define  iCONTINUE   42 // Пеpеход к следующей итерации цикла
define  iEXIT       43 // Завеpшение цикла
define  iCAST       44 // Пpеобpазование типа
define  iINC        45 // Инкpемент
define  iDEC        46 // Декpемент
define  iPUSH       47 // Пеpедача паpаметpа
define  iASSIGN     48 // Пpисваивание
define  iINLINE     49 // Вставка кода
define  iRETURN     50 // Возвpат
define  iSWITCH     51 // Пеpеключатель

define  iBODY       52 // Тело цикла или ветки select или switch
define  iCOND       53 // Условие цикла, select или switch 
define  iCASE       54 // ветка select или switch
define  iVALUE      55 //
define  iDEFAULT    56 //

define  iREINTERPRET_CAST 57

define  iNOT        58

define  iFAKE_CAST  59 // Fake cast to mask a semantic error while parsing

define  iREG        60 // used in the backend for ValueRef's
define  iCONST      61 // used in the backend for ValueRef's

define  iVIRTUAL_JUMP 62 // used in the backend for jump optimization

define  iBRANCH_SF  63 // used in the backend for branch optimization
define  iBRANCH_NSF 64 // used in the backend for branch optimization

define  iNOOP_CAST  65 // used in the backend

define  iINVALID    66 // when something must not be accepted by backend

define  iID_COUNT   67

/*****************************************************************************/

/* Operator priorities (precedence) */
define  PRIO_ZERO        0
define  PRIO_BOOL        1 // boolean operators
define  PRIO_COMP        2 // <, >, >= etc
define  PRIO_ADD         3 // + and -
define  PRIO_MUL         4 // *, / and %
define  PRIO_NEG         5 // unary minus
define  PRIO_INC         6 // inc/dec
define  PRIO_LVALUE      7 // LVALUE
define  PRIO_EXPR       10 // an expression in parentheses
define  PRIO_FUNCCALL   15 // foo(x)
define  PRIO_LITER      20 // literals

/*****************************************************************************/

/* Имена ссылок */

define lLOOPBODY    1
define lCONTINUE    2
define lEXIT        3
define lCASEBODY    4
define lCASEBODYEND 5
define lBRANCH      6
define lTRUE        7
define lFALSE       8
define lEND         9

/*****************************************************************************/

define  tPE          1 // PE  (Windows95/NT)
define  tELF         2 // ELF (Linux)

define  mNONE        0
define  mCON         1
define  mGUI         2

/*****************************************************************************/
