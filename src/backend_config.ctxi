
/*
	Конфигурация кодогенератора.
*/

/*****************************************************************************/

/* Характеристики целевой платформы. */

word PointerSize = 4;             /* Размер типа-указателя. */
word DefaultInStackAlignment = 4; /* Выравнивание переменных, размещаемых в стеке. */
word DefaultStaticAlignment  = 4; /* Выравнивание глобальных переменных. */

/*
	1 - Память под глобальные переменные обнулена при запуске программы.
	0 - Память под глобальные переменные изначально содержит мусор.
*/
word StaticDataIsZeroed = 1;

/*****************************************************************************/

/* Режимы и форматы выходных данных. */

word TargetFileFormat;            /* Формат обьектного файла. */
word TargetMode;                  /* Режим, специфичный для целевой платформы и/или формата файла. */

/*****************************************************************************/

/*
	Параметры кодогенерации и оптимизации.
*/

/*
	Задаёт режим объединения литералов в RO-секции.
*/
define RODataMergeModeNone      0 /* литералы не объединяются. */
define RODataMergeModeNormal    1 /* литералы объединяются */
define RODataMergeModeAgressive 2 /* литералы сортируются по убыванию длины и затем объединяются */
word RODataMergeMode = RODataMergeModeNormal;



/* Проводить ли pipehole оптимизацию. */
word PHOptimization = 1;

/*
	0 - генерировать стандартный пролог для всех функций.
	1 - уменьшать длину пролога функции при помощи инструкции enter, где это возможно.
*/
word EmitEnterInstruction = 0;

/*
	0 - генерировать стандартный эпилог для всех функций.
	1 - уменьшать длину эпилога функции при помощи инструкции leave.
*/
word EmitLeaveInstruction = 0;

/*****************************************************************************/

/* Вывод информации об анализе программы. */


word WarnUnusedGlobals = 0;